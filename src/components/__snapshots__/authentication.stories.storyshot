// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Authentication Default 1`] = `
<BVLinearGradient
  colors={
    Array [
      4282679787,
      4278235391,
    ]
  }
  endPoint={
    Object {
      "x": 0.5,
      "y": 1,
    }
  }
  locations={null}
  startPoint={
    Object {
      "x": 0.5,
      "y": 0,
    }
  }
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <Mock$ReactNavigation$SafeAreaView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "padding": 24,
          },
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          },
        ]
      }
      testID="logo-header"
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Array [
            Object {
              "height": 100,
              "width": 100,
            },
            Object {
              "height": 35,
              "width": 192,
            },
          ]
        }
      />
    </View>
    <View
      style={
        Object {
          "paddingBottom": 24,
        }
      }
      testID="sign-in-header"
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 32,
            },
          ]
        }
      >
        <View>
          <View
            style={Object {}}
          >
            <Text
              selectable={false}
              style={
                Array [
                  Object {
                    "marginVertical": 0,
                    "textAlign": "center",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 17,
                      "marginBottom": 17,
                      "marginTop": 17,
                      "marginVertical": 0,
                      "textAlign": "center",
                    }
                  }
                >
                  To open your company's learning app, you need to scan 
                </Text>
              </Text>
              <Text
                selectable={false}
                style={
                  Array [
                    Object {
                      "fontWeight": "500",
                    },
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "white",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "marginBottom": 17,
                        "marginTop": 17,
                        "marginVertical": 0,
                        "textAlign": "center",
                      }
                    }
                  >
                    your personal QR code.
                  </Text>
                </Text>
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "paddingBottom": 8,
            },
          ]
        }
        testID="carousel"
      >
        <View
          style={
            Object {
              "height": 8,
              "width": 8,
            }
          }
        />
        <Mock$ReactNativeSnapCarousel$Pagination
          activeDotIndex={0}
          containerStyle={
            Object {
              "flex": 1,
              "paddingVertical": 8,
            }
          }
          dotContainerStyle={
            Object {
              "borderColor": "#FFFFFF",
              "borderRadius": 1000,
              "borderWidth": 1,
              "height": 14,
              "width": 14,
            }
          }
          dotStyle={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 5,
              "height": 8,
              "margin": 0,
              "marginHorizontal": 8,
              "padding": 0,
              "width": 8,
            }
          }
          dotsLength={3}
          inactiveDotOpacity={0}
          inactiveDotScale={0.6}
          inactiveDotStyle={Object {}}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      style={
        Object {
          "padding": 24,
        }
      }
    >
      <View
        testID="button-scan-qr-code"
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 32,
              "borderWidth": 0,
              "flexDirection": "row",
              "height": 54,
              "justifyContent": "center",
              "marginBottom": 0,
              "opacity": 1,
            }
          }
          testID="button-scan-qr-code-native"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="30"
              bbWidth="30"
              color="#00B0FF"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  undefined,
                  false,
                  Object {
                    "flex": 0,
                    "height": 30,
                    "width": 30,
                  },
                ]
              }
              vbHeight={30}
              vbWidth={30}
            >
              <RNSVGPath
                d="M15 0C6.7 0 0 6.7 0 15s6.7 15 15 15 15-6.7 15-15S23.3 0 15 0zm0 27C8.4 27 3 21.6 3 15S8.4 3 15 3s12 5.4 12 12-5.4 12-12 12z"
                fill={
                  Array [
                    0,
                    0,
                    0.6901960784313725,
                    1,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              />
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    0,
                    0.6901960784313725,
                    1,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              >
                <RNSVGPath
                  d="M12 12h1.5v-1.5h-2.2c-.5 0-.8.3-.8.7v2.3H12V12zM18.7 10.5h-2.2V12H18v1.5h1.5v-2.3c0-.4-.3-.7-.8-.7zM12 16.5h-1.5v2.2c0 .5.3.8.8.8h2.2V18H12v-1.5zM18 18h-1.5v1.5h2.2c.5 0 .8-.3.8-.8v-2.2H18V18z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              style={
                Object {
                  "height": 8,
                  "width": 8,
                }
              }
            />
            <View>
              <View
                style={Object {}}
              >
                <Text
                  style={Object {}}
                >
                  <Text
                    selectable={false}
                    style={
                      Array [
                        Object {},
                        Object {},
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#00B0FF",
                          "fontSize": 17,
                          "fontWeight": "bold",
                          "textAlign": "center",
                        }
                      }
                    >
                      Scan your 
                    </Text>
                  </Text>
                  <Text
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "fontWeight": "500",
                        },
                        Object {},
                        Object {},
                      ]
                    }
                  >
                    <Text
                      selectable={false}
                      style={
                        Array [
                          Object {},
                          Object {},
                        ]
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#00B0FF",
                            "fontSize": 17,
                            "fontWeight": "500",
                            "textAlign": "center",
                          }
                        }
                      >
                        QR code
                      </Text>
                    </Text>
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View>
          <View
            style={Object {}}
          >
            <Text
              selectable={false}
              style={
                Array [
                  Object {
                    "marginVertical": 0,
                    "textAlign": "center",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "marginBottom": 17,
                      "marginTop": 17,
                      "marginVertical": 0,
                      "textAlign": "center",
                    }
                  }
                >
                  No learning platform? 
                </Text>
              </Text>
              <Text
                baseFontStyle={
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 17,
                    "textAlign": "center",
                  }
                }
                classesStyles={Object {}}
                debug={false}
                decodeEntities={true}
                emSize={14}
                html="<p>No learning platform? <a href=\\"/\\"><b><u>Start Demo</u></b></a></p>"
                ignoredStyles={
                  Array [
                    "width",
                    "height",
                  ]
                }
                ignoredTags={
                  Array [
                    "head",
                    "scripts",
                    "audio",
                    "video",
                    "track",
                    "embed",
                    "object",
                    "param",
                    "source",
                    "canvas",
                    "noscript",
                    "caption",
                    "col",
                    "colgroup",
                    "table",
                    "tbody",
                    "td",
                    "tfoot",
                    "th",
                    "thead",
                    "tr",
                    "button",
                    "datalist",
                    "fieldset",
                    "form",
                    "input",
                    "label",
                    "legend",
                    "meter",
                    "optgroup",
                    "option",
                    "output",
                    "progress",
                    "select",
                    "textarea",
                    "details",
                    "diaglog",
                    "menu",
                    "menuitem",
                    "summary",
                  ]
                }
                imagesMaxWidth={750}
                nodeIndex={1}
                onLinkPress={[Function]}
                onPress={[Function]}
                parentIndex={0}
                parentTag="p"
                parentWrapper="Text"
                ptSize={1.3}
                rawChildren={
                  Array [
                    Object {
                      "attribs": Object {},
                      "children": Array [
                        Object {
                          "attribs": Object {},
                          "children": Array [
                            Object {
                              "attribs": Object {},
                              "data": "Start Demo",
                              "nodeIndex": 0,
                              "parent": Object {
                                "attribs": Object {},
                                "children": Array [
                                  Object {
                                    "data": "Start Demo",
                                    "next": null,
                                    "parent": [Circular],
                                    "prev": null,
                                    "type": "text",
                                  },
                                ],
                                "name": "u",
                                "next": null,
                                "parent": Object {
                                  "attribs": Object {},
                                  "children": Array [
                                    [Circular],
                                  ],
                                  "name": "b",
                                  "next": null,
                                  "parent": Object {
                                    "attribs": Object {
                                      "href": "/",
                                    },
                                    "children": Array [
                                      [Circular],
                                    ],
                                    "name": "a",
                                    "next": null,
                                    "parent": Object {
                                      "attribs": Object {},
                                      "children": Array [
                                        Object {
                                          "data": "No learning platform? ",
                                          "next": [Circular],
                                          "parent": [Circular],
                                          "prev": null,
                                          "type": "text",
                                        },
                                        [Circular],
                                      ],
                                      "name": "p",
                                      "next": null,
                                      "parent": null,
                                      "prev": null,
                                      "type": "tag",
                                    },
                                    "prev": Object {
                                      "data": "No learning platform? ",
                                      "next": [Circular],
                                      "parent": Object {
                                        "attribs": Object {},
                                        "children": Array [
                                          [Circular],
                                          [Circular],
                                        ],
                                        "name": "p",
                                        "next": null,
                                        "parent": null,
                                        "prev": null,
                                        "type": "tag",
                                      },
                                      "prev": null,
                                      "type": "text",
                                    },
                                    "type": "tag",
                                  },
                                  "prev": null,
                                  "type": "tag",
                                },
                                "prev": null,
                                "type": "tag",
                              },
                              "parentTag": "u",
                              "tagName": "rawtext",
                              "wrapper": "Text",
                            },
                          ],
                          "nodeIndex": 0,
                          "parent": Object {
                            "attribs": Object {},
                            "children": Array [
                              Object {
                                "attribs": Object {},
                                "children": Array [
                                  Object {
                                    "data": "Start Demo",
                                    "next": null,
                                    "parent": [Circular],
                                    "prev": null,
                                    "type": "text",
                                  },
                                ],
                                "name": "u",
                                "next": null,
                                "parent": [Circular],
                                "prev": null,
                                "type": "tag",
                              },
                            ],
                            "name": "b",
                            "next": null,
                            "parent": Object {
                              "attribs": Object {
                                "href": "/",
                              },
                              "children": Array [
                                [Circular],
                              ],
                              "name": "a",
                              "next": null,
                              "parent": Object {
                                "attribs": Object {},
                                "children": Array [
                                  Object {
                                    "data": "No learning platform? ",
                                    "next": [Circular],
                                    "parent": [Circular],
                                    "prev": null,
                                    "type": "text",
                                  },
                                  [Circular],
                                ],
                                "name": "p",
                                "next": null,
                                "parent": null,
                                "prev": null,
                                "type": "tag",
                              },
                              "prev": Object {
                                "data": "No learning platform? ",
                                "next": [Circular],
                                "parent": Object {
                                  "attribs": Object {},
                                  "children": Array [
                                    [Circular],
                                    [Circular],
                                  ],
                                  "name": "p",
                                  "next": null,
                                  "parent": null,
                                  "prev": null,
                                  "type": "tag",
                                },
                                "prev": null,
                                "type": "text",
                              },
                              "type": "tag",
                            },
                            "prev": null,
                            "type": "tag",
                          },
                          "parentTag": "b",
                          "tagName": "u",
                          "wrapper": "Text",
                        },
                      ],
                      "nodeIndex": 0,
                      "parent": Object {
                        "attribs": Object {
                          "href": "/",
                        },
                        "children": Array [
                          Object {
                            "attribs": Object {},
                            "children": Array [
                              Object {
                                "attribs": Object {},
                                "children": Array [
                                  Object {
                                    "data": "Start Demo",
                                    "next": null,
                                    "parent": [Circular],
                                    "prev": null,
                                    "type": "text",
                                  },
                                ],
                                "name": "u",
                                "next": null,
                                "parent": [Circular],
                                "prev": null,
                                "type": "tag",
                              },
                            ],
                            "name": "b",
                            "next": null,
                            "parent": [Circular],
                            "prev": null,
                            "type": "tag",
                          },
                        ],
                        "name": "a",
                        "next": null,
                        "parent": Object {
                          "attribs": Object {},
                          "children": Array [
                            Object {
                              "data": "No learning platform? ",
                              "next": [Circular],
                              "parent": [Circular],
                              "prev": null,
                              "type": "text",
                            },
                            [Circular],
                          ],
                          "name": "p",
                          "next": null,
                          "parent": null,
                          "prev": null,
                          "type": "tag",
                        },
                        "prev": Object {
                          "data": "No learning platform? ",
                          "next": [Circular],
                          "parent": Object {
                            "attribs": Object {},
                            "children": Array [
                              [Circular],
                              [Circular],
                            ],
                            "name": "p",
                            "next": null,
                            "parent": null,
                            "prev": null,
                            "type": "tag",
                          },
                          "prev": null,
                          "type": "text",
                        },
                        "type": "tag",
                      },
                      "parentTag": "a",
                      "tagName": "b",
                      "wrapper": "Text",
                    },
                  ]
                }
                renderers={
                  Object {
                    "font": [Function],
                  }
                }
                staticContentMaxWidth={750}
                style={
                  Array [
                    Object {
                      "color": "#245dc1",
                      "textDecorationLine": "underline",
                    },
                    Object {
                      "color": "#FFFFFF",
                    },
                    Object {},
                  ]
                }
                tagsStyles={
                  Object {
                    "a": Object {
                      "color": "#FFFFFF",
                    },
                    "b": Object {
                      "fontWeight": "500",
                    },
                    "h1": Object {
                      "fontSize": 17,
                    },
                    "h2": Object {
                      "fontSize": 17,
                    },
                    "h3": Object {
                      "fontSize": 17,
                    },
                    "h4": Object {
                      "fontSize": 17,
                    },
                    "h5": Object {
                      "fontSize": 17,
                    },
                    "h6": Object {
                      "fontSize": 17,
                    },
                    "i": Object {
                      "fontStyle": "italic",
                    },
                    "img": undefined,
                    "p": Object {
                      "marginVertical": 0,
                      "textAlign": "center",
                    },
                    "s": Object {
                      "textDecorationLine": "line-through",
                    },
                    "u": Object {
                      "textDecorationLine": "underline",
                    },
                  }
                }
                textSelectable={false}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "fontWeight": "500",
                      },
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "textDecorationLine": "underline",
                        },
                        Object {},
                        Object {},
                      ]
                    }
                  >
                    <Text
                      selectable={false}
                      style={
                        Array [
                          Object {},
                          Object {},
                        ]
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#FFFFFF",
                            "fontSize": 17,
                            "fontWeight": "500",
                            "marginBottom": 17,
                            "marginTop": 17,
                            "marginVertical": 0,
                            "textAlign": "center",
                            "textDecorationLine": "underline",
                          }
                        }
                      >
                        Start Demo
                      </Text>
                    </Text>
                  </Text>
                </Text>
              </Text>
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <View
        accessible={true}
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="undefined"
          bbWidth="undefined"
          color="#FFFFFF"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "height": 21,
                "width": 21,
              },
              false,
              undefined,
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGPath
            d="M.002.002h24v24h-24z"
            fill={null}
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth="1"
            x={0}
            y={0}
          />
          <RNSVGPath
            d="M18 3H6c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h2.875L12 23l3.125-5H18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.127V13h-2v-2h1c1.103 0 2-.898 2-2 0-1.102-.897-2-2-2s-2 .898-2 2H8c0-2.206 1.794-4 4-4s4 1.794 4 4a4.007 4.007 0 0 1-3 3.873z"
            fill={
              Array [
                0,
                1,
                1,
                1,
                1,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth="1"
            x={0}
            y={0}
          />
        </RNSVGSvgView>
        <View
          style={
            Object {
              "height": 8,
              "width": 8,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 13,
              "textDecorationLine": "underline",
            }
          }
        >
          Need help?
        </Text>
      </View>
    </View>
  </Mock$ReactNavigation$SafeAreaView>
</BVLinearGradient>
`;
