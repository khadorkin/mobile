// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots QuestionTemplate Default 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="question-template"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-1"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              My app
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-2"
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Type here"
          placeholderTextColor="#90A4AE"
          rejectResponderTermination={true}
          selectTextOnFocus={true}
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderColor": "#CFD8DC",
                "borderRadius": 3,
                "borderWidth": 1,
                "minWidth": 175,
                "padding": 8,
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              "",
            ]
          }
          testID="question-section-1-part-2-text"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-3"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "textDecorationLine": "line-through",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "lineHeight": 30,
                      "padding": 8,
                      "textDecorationLine": "line-through",
                    }
                  }
                >
                   NOT on
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-4"
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="question-section-1-part-4-select-input"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#CFD8DC",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "minWidth": 175,
                    "padding": 8,
                  },
                  "",
                ],
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {},
                  Array [
                    Object {
                      "color": "#90A4AE",
                      "flex": 1,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#90A4AE",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "textAlign": "center",
                    },
                    "",
                  ],
                ]
              }
            >
              Select an answer
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                  "width": 8,
                }
              }
            />
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={15}
              bbWidth={15}
              color="#546E7A"
              height={15}
              id="prefix__Calque_1"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  null,
                  Object {
                    "flex": 0,
                    "height": 15,
                    "width": 15,
                  },
                ]
              }
              tintColor="#546E7A"
              vbHeight={20}
              vbWidth={20}
              width={15}
              x={0}
              xmlSpace="preserve"
              y={0}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      4278190080,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="prefix__Page-1"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
                    fill={
                      Array [
                        0,
                        4283723386,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="prefix__arrow_down"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          onSwipeComplete={[Function]}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          testID="question-section-1-part-4-select-modal-animated"
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
          />
          <View
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onSwipeComplete={[Function]}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            testID="question-section-1-part-4-select-modal-animated"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 5,
                  "overflow": "hidden",
                }
              }
              testID="question-section-1-part-4-select-modal"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#FFFFFF",
                      "height": 64,
                      "justifyContent": "center",
                      "paddingHorizontal": 32,
                    },
                    Object {
                      "backgroundColor": undefined,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "paddingLeft": 24,
                      },
                      false,
                      false,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 16,
                        "left": 16,
                        "right": 16,
                        "top": 16,
                      }
                    }
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="close-modal"
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color="#546E7A"
                      height={16}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          undefined,
                          null,
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor="#546E7A"
                      vbHeight={24}
                      vbWidth={24}
                      width={16}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGPath
                          d="M0 0h24v24H0z"
                          fill={null}
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                          fill={
                            Array [
                              0,
                              4283723386,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "paddingBottom": 32,
                      "paddingHorizontal": 32,
                    },
                    undefined,
                    undefined,
                    Object {
                      "paddingHorizontal": 0,
                    },
                  ]
                }
              >
                <RCTScrollView
                  ItemSeparatorComponent={[Function]}
                  data={
                    Array [
                      Object {
                        "_id": "1",
                        "text": "Play Store",
                        "value": "play_store",
                      },
                      Object {
                        "_id": "2",
                        "text": "App Store",
                        "value": "app_store",
                      },
                      Object {
                        "_id": "3",
                        "text": "Apple Store",
                        "value": "apple_store",
                      },
                      Object {
                        "_id": "4",
                        "text": "Pineapple Store",
                        "value": "pineapple_store",
                      },
                    ]
                  }
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  showsVerticalScrollIndicator={false}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                  testID="question-section-1-part-4-select-modal-items"
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-modal-item-1"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Play Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-modal-item-2"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          App Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-modal-item-3"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Apple Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-modal-item-4"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Pineapple Store
                        </Text>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
          </View>
        </Modal>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-5"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                    "lineHeight": 30,
                    "padding": 8,
                  }
                }
              >
                , 
              </Text>
            </Text>
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                    "lineHeight": 30,
                    "padding": 8,
                  }
                }
              >
                but
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-6"
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Type here"
          placeholderTextColor="#90A4AE"
          rejectResponderTermination={true}
          selectTextOnFocus={true}
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderColor": "#CFD8DC",
                "borderRadius": 3,
                "borderWidth": 1,
                "minWidth": 175,
                "padding": 8,
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              Object {
                "borderColor": "#00B0FF",
                "color": "#00B0FF",
              },
            ]
          }
          testID="question-section-1-part-6-text-selected"
          underlineColorAndroid="transparent"
          value="Waze"
        />
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-7"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "fontStyle": "italic",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontStyle": "italic",
                      "fontWeight": "700",
                      "lineHeight": 30,
                      "padding": 8,
                    }
                  }
                >
                  is on
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-8"
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="question-section-1-part-8-select-selected-input"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#CFD8DC",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "minWidth": 175,
                    "padding": 8,
                  },
                  Object {
                    "borderColor": "#00B0FF",
                    "color": "#00B0FF",
                  },
                ],
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {},
                  Array [
                    Object {
                      "color": "#90A4AE",
                      "flex": 1,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#90A4AE",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#00B0FF",
                    },
                  ],
                ]
              }
            >
              App Store
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                  "width": 8,
                }
              }
            />
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={15}
              bbWidth={15}
              color="#00B0FF"
              height={15}
              id="prefix__Calque_1"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  null,
                  Object {
                    "flex": 0,
                    "height": 15,
                    "width": 15,
                  },
                ]
              }
              tintColor="#00B0FF"
              vbHeight={20}
              vbWidth={20}
              width={15}
              x={0}
              xmlSpace="preserve"
              y={0}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      4278190080,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="prefix__Page-1"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
                    fill={
                      Array [
                        0,
                        4278235391,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="prefix__arrow_down"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          onSwipeComplete={[Function]}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          testID="question-section-1-part-8-select-selected-modal-animated"
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
          />
          <View
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onSwipeComplete={[Function]}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            testID="question-section-1-part-8-select-selected-modal-animated"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 5,
                  "overflow": "hidden",
                }
              }
              testID="question-section-1-part-8-select-selected-modal"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#FFFFFF",
                      "height": 64,
                      "justifyContent": "center",
                      "paddingHorizontal": 32,
                    },
                    Object {
                      "backgroundColor": undefined,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "paddingLeft": 24,
                      },
                      false,
                      false,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 16,
                        "left": 16,
                        "right": 16,
                        "top": 16,
                      }
                    }
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="close-modal"
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color="#546E7A"
                      height={16}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          undefined,
                          null,
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor="#546E7A"
                      vbHeight={24}
                      vbWidth={24}
                      width={16}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGPath
                          d="M0 0h24v24H0z"
                          fill={null}
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                          fill={
                            Array [
                              0,
                              4283723386,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "paddingBottom": 32,
                      "paddingHorizontal": 32,
                    },
                    undefined,
                    undefined,
                    Object {
                      "paddingHorizontal": 0,
                    },
                  ]
                }
              >
                <RCTScrollView
                  ItemSeparatorComponent={[Function]}
                  data={
                    Array [
                      Object {
                        "_id": "1",
                        "text": "Play Store",
                        "value": "play_store",
                      },
                      Object {
                        "_id": "2",
                        "text": "App Store",
                        "value": "app_store",
                      },
                      Object {
                        "_id": "3",
                        "text": "Apple Store",
                        "value": "apple_store",
                      },
                      Object {
                        "_id": "4",
                        "text": "Pineapple Store",
                        "value": "pineapple_store",
                      },
                    ]
                  }
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  showsVerticalScrollIndicator={false}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                  testID="question-section-1-part-8-select-selected-modal-items"
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-modal-item-1"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Play Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-modal-item-2"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                Object {
                                  "color": "#00B0FF",
                                },
                              ],
                            ]
                          }
                        >
                          App Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-modal-item-3"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Apple Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-modal-item-4"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Pineapple Store
                        </Text>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
          </View>
        </Modal>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionTemplate Disabled 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="question-template"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-1"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              My app
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-2"
      >
        <TextInput
          allowFontScaling={true}
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Type here"
          placeholderTextColor="#90A4AE"
          rejectResponderTermination={true}
          selectTextOnFocus={false}
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderColor": "#CFD8DC",
                "borderRadius": 3,
                "borderWidth": 1,
                "minWidth": 175,
                "padding": 8,
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              "",
            ]
          }
          testID="question-section-1-part-2-text-disabled"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-3"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "textDecorationLine": "line-through",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "lineHeight": 30,
                      "padding": 8,
                      "textDecorationLine": "line-through",
                    }
                  }
                >
                   NOT on
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-4"
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="question-section-1-part-4-select-disabled-input"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#CFD8DC",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "minWidth": 175,
                    "padding": 8,
                  },
                  "",
                ],
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {},
                  Array [
                    Object {
                      "color": "#90A4AE",
                      "flex": 1,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#90A4AE",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "textAlign": "center",
                    },
                    "",
                  ],
                ]
              }
            >
              Select an answer
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                  "width": 8,
                }
              }
            />
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={15}
              bbWidth={15}
              color="#546E7A"
              height={15}
              id="prefix__Calque_1"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  null,
                  Object {
                    "flex": 0,
                    "height": 15,
                    "width": 15,
                  },
                ]
              }
              tintColor="#546E7A"
              vbHeight={20}
              vbWidth={20}
              width={15}
              x={0}
              xmlSpace="preserve"
              y={0}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      4278190080,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="prefix__Page-1"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
                    fill={
                      Array [
                        0,
                        4283723386,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="prefix__arrow_down"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          onSwipeComplete={[Function]}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          testID="question-section-1-part-4-select-disabled-modal-animated"
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
          />
          <View
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onSwipeComplete={[Function]}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            testID="question-section-1-part-4-select-disabled-modal-animated"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 5,
                  "overflow": "hidden",
                }
              }
              testID="question-section-1-part-4-select-disabled-modal"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#FFFFFF",
                      "height": 64,
                      "justifyContent": "center",
                      "paddingHorizontal": 32,
                    },
                    Object {
                      "backgroundColor": undefined,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "paddingLeft": 24,
                      },
                      false,
                      false,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 16,
                        "left": 16,
                        "right": 16,
                        "top": 16,
                      }
                    }
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="close-modal"
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color="#546E7A"
                      height={16}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          undefined,
                          null,
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor="#546E7A"
                      vbHeight={24}
                      vbWidth={24}
                      width={16}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGPath
                          d="M0 0h24v24H0z"
                          fill={null}
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                          fill={
                            Array [
                              0,
                              4283723386,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "paddingBottom": 32,
                      "paddingHorizontal": 32,
                    },
                    undefined,
                    undefined,
                    Object {
                      "paddingHorizontal": 0,
                    },
                  ]
                }
              >
                <RCTScrollView
                  ItemSeparatorComponent={[Function]}
                  data={
                    Array [
                      Object {
                        "_id": "1",
                        "text": "Play Store",
                        "value": "play_store",
                      },
                      Object {
                        "_id": "2",
                        "text": "App Store",
                        "value": "app_store",
                      },
                      Object {
                        "_id": "3",
                        "text": "Apple Store",
                        "value": "apple_store",
                      },
                      Object {
                        "_id": "4",
                        "text": "Pineapple Store",
                        "value": "pineapple_store",
                      },
                    ]
                  }
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  showsVerticalScrollIndicator={false}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                  testID="question-section-1-part-4-select-disabled-modal-items"
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-disabled-modal-item-1"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Play Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-disabled-modal-item-2"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          App Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-disabled-modal-item-3"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Apple Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-4-select-disabled-modal-item-4"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Pineapple Store
                        </Text>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
          </View>
        </Modal>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-5"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                    "lineHeight": 30,
                    "padding": 8,
                  }
                }
              >
                , 
              </Text>
            </Text>
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                    "lineHeight": 30,
                    "padding": 8,
                  }
                }
              >
                but
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-6"
      >
        <TextInput
          allowFontScaling={true}
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Type here"
          placeholderTextColor="#90A4AE"
          rejectResponderTermination={true}
          selectTextOnFocus={false}
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderColor": "#CFD8DC",
                "borderRadius": 3,
                "borderWidth": 1,
                "minWidth": 175,
                "padding": 8,
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              Object {
                "borderColor": "#00B0FF",
                "color": "#00B0FF",
              },
            ]
          }
          testID="question-section-1-part-6-text-selected-disabled"
          underlineColorAndroid="transparent"
          value="Waze"
        />
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-7"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "fontStyle": "italic",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontStyle": "italic",
                      "fontWeight": "700",
                      "lineHeight": 30,
                      "padding": 8,
                    }
                  }
                >
                  is on
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingVertical": 8,
            },
            false,
          ]
        }
        testID="question-section-1-part-8"
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="question-section-1-part-8-select-selected-disabled-input"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#CFD8DC",
                    "borderRadius": 3,
                    "borderWidth": 1,
                    "minWidth": 175,
                    "padding": 8,
                  },
                  Object {
                    "borderColor": "#00B0FF",
                    "color": "#00B0FF",
                  },
                ],
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {},
                  Array [
                    Object {
                      "color": "#90A4AE",
                      "flex": 1,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#90A4AE",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#00B0FF",
                    },
                  ],
                ]
              }
            >
              App Store
            </Text>
            <View
              style={
                Object {
                  "height": 8,
                  "width": 8,
                }
              }
            />
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={15}
              bbWidth={15}
              color="#00B0FF"
              height={15}
              id="prefix__Calque_1"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  null,
                  Object {
                    "flex": 0,
                    "height": 15,
                    "width": 15,
                  },
                ]
              }
              tintColor="#00B0FF"
              vbHeight={20}
              vbWidth={20}
              width={15}
              x={0}
              xmlSpace="preserve"
              y={0}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      4278190080,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="prefix__Page-1"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
                    fill={
                      Array [
                        0,
                        4278235391,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="prefix__arrow_down"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={false}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          onSwipeComplete={[Function]}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          testID="question-section-1-part-8-select-selected-disabled-modal-animated"
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
          />
          <View
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onSwipeComplete={[Function]}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            testID="question-section-1-part-8-select-selected-disabled-modal-animated"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderRadius": 5,
                  "overflow": "hidden",
                }
              }
              testID="question-section-1-part-8-select-selected-disabled-modal"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#FFFFFF",
                      "height": 64,
                      "justifyContent": "center",
                      "paddingHorizontal": 32,
                    },
                    Object {
                      "backgroundColor": undefined,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "paddingLeft": 24,
                      },
                      false,
                      false,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 16,
                        "left": 16,
                        "right": 16,
                        "top": 16,
                      }
                    }
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="close-modal"
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      color="#546E7A"
                      height={16}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          undefined,
                          null,
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      tintColor="#546E7A"
                      vbHeight={24}
                      vbWidth={24}
                      width={16}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGPath
                          d="M0 0h24v24H0z"
                          fill={null}
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                          fill={
                            Array [
                              0,
                              4283723386,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "paddingBottom": 32,
                      "paddingHorizontal": 32,
                    },
                    undefined,
                    undefined,
                    Object {
                      "paddingHorizontal": 0,
                    },
                  ]
                }
              >
                <RCTScrollView
                  ItemSeparatorComponent={[Function]}
                  data={
                    Array [
                      Object {
                        "_id": "1",
                        "text": "Play Store",
                        "value": "play_store",
                      },
                      Object {
                        "_id": "2",
                        "text": "App Store",
                        "value": "app_store",
                      },
                      Object {
                        "_id": "3",
                        "text": "Apple Store",
                        "value": "apple_store",
                      },
                      Object {
                        "_id": "4",
                        "text": "Pineapple Store",
                        "value": "pineapple_store",
                      },
                    ]
                  }
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  showsVerticalScrollIndicator={false}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                  testID="question-section-1-part-8-select-selected-disabled-modal-items"
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-disabled-modal-item-1"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Play Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-disabled-modal-item-2"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                Object {
                                  "color": "#00B0FF",
                                },
                              ],
                            ]
                          }
                        >
                          App Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-disabled-modal-item-3"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Apple Store
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "borderColor": "rgba(0, 0, 0, 0.1)",
                            "borderTopWidth": 1,
                          }
                        }
                      />
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "opacity": 1,
                            "padding": 16,
                          }
                        }
                        testID="question-section-1-part-8-select-selected-disabled-modal-item-4"
                      >
                        <Text
                          style={
                            Array [
                              Object {},
                              Array [
                                Object {
                                  "color": "#14171A",
                                  "fontWeight": "700",
                                },
                                false,
                              ],
                            ]
                          }
                        >
                          Pineapple Store
                        </Text>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
          </View>
        </Modal>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionTemplate Incorrect items 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="question-template"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-1"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              My app
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-2"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              inp1
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-3"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "textDecorationLine": "line-through",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "lineHeight": 30,
                      "padding": 8,
                      "textDecorationLine": "line-through",
                    }
                  }
                >
                   NOT on
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-5"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                    "lineHeight": 30,
                    "padding": 8,
                  }
                }
              >
                , 
              </Text>
            </Text>
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                    "lineHeight": 30,
                    "padding": 8,
                  }
                }
              >
                but
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-6"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              inp2
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-7"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "flex": 1,
                  "height": 16.8,
                }
              }
            >
              

            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "fontStyle": "italic",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontStyle": "italic",
                      "fontWeight": "700",
                      "lineHeight": 30,
                      "padding": 8,
                    }
                  }
                >
                  is on
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        testID="question-section-1-part-8"
      >
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              sel2
            </Text>
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 4,
            "width": 4,
          }
        }
      />
    </View>
  </View>
</View>
`;
