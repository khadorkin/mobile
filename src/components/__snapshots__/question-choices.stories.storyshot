// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots QuestionChoices QCM 1`] = `
<View
  testID="question-choices"
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#FFFFFF",
              "borderColor": "rgba(0, 0, 0, 0.1)",
              "borderRadius": 3,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "overflow": "hidden",
            },
          ]
        }
        testID="question-choice-1"
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 16,
                "paddingRight": 8,
                "paddingVertical": 24,
              },
              false,
              false,
            ]
          }
        >
          <View>
            <View
              style={Object {}}
            >
              <Text
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                    }
                  }
                >
                  Play Store
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#FFFFFF",
              "borderColor": "rgba(0, 0, 0, 0.1)",
              "borderRadius": 3,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "overflow": "hidden",
            },
          ]
        }
        testID="question-choice-2-selected"
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 16,
                "paddingRight": 8,
                "paddingVertical": 24,
              },
              false,
              Object {
                "backgroundColor": "#00B0FF",
                "borderColor": "#00B0FF",
              },
            ]
          }
        >
          <View>
            <View
              style={Object {}}
            >
              <Text
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 15,
                      "fontWeight": "700",
                    }
                  }
                >
                  App Store
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#FFFFFF",
              "borderColor": "rgba(0, 0, 0, 0.1)",
              "borderRadius": 3,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "overflow": "hidden",
            },
          ]
        }
        testID="question-choice-3"
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 16,
                "paddingRight": 8,
                "paddingVertical": 24,
              },
              false,
              false,
            ]
          }
        >
          <View>
            <View
              style={Object {}}
            >
              <Text
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                    }
                  }
                >
                  Apple Store
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#FFFFFF",
              "borderColor": "rgba(0, 0, 0, 0.1)",
              "borderRadius": 3,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "overflow": "hidden",
            },
          ]
        }
        testID="question-choice-4"
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 16,
                "paddingRight": 8,
                "paddingVertical": 24,
              },
              false,
              false,
            ]
          }
        >
          <View>
            <View
              style={Object {}}
            >
              <Text
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                    }
                  }
                >
                  Pineapple Store
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoices QCM Basic 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      Object {
        "width": "100%",
      },
    ]
  }
  testID="question-input"
>
  <TextInput
    allowFontScaling={true}
    editable={true}
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Type here"
    placeholderTextColor="#90A4AE"
    selectTextOnFocus={true}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CFD8DC",
          "borderRadius": 3,
          "borderWidth": 1,
          "color": "#90A4AE",
          "fontSize": 15,
          "fontWeight": "700",
          "minWidth": 175,
          "padding": 8,
          "textAlign": "center",
        },
        undefined,
      ]
    }
    testID="question-input-text"
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Storyshots QuestionChoices QCM Drag 1`] = `
<View
  testID="question-draggable"
>
  <View
    style={Object {}}
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FAFAFA",
            "borderColor": "#ECEFF1",
            "borderRadius": 3,
            "borderStyle": "dashed",
            "borderWidth": 2,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "marginBottom": 8,
            "padding": 4,
          },
          false,
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "margin": 4,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="choice-2-selected"
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                Object {
                  "flex": 0,
                  "padding": 16,
                  "paddingLeft": undefined,
                  "paddingRight": undefined,
                  "paddingVertical": undefined,
                },
                Object {
                  "backgroundColor": "#00B0FF",
                  "borderColor": "#00B0FF",
                },
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 13,
                        "fontWeight": "700",
                      }
                    }
                  >
                    App Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "flexWrap": "wrap",
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "margin": 4,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="choice-1-unselected"
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                Object {
                  "flex": 0,
                  "padding": 16,
                  "paddingLeft": undefined,
                  "paddingRight": undefined,
                  "paddingVertical": undefined,
                },
                false,
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#14171A",
                        "fontSize": 13,
                        "fontWeight": "700",
                      }
                    }
                  >
                    Play Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "margin": 4,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="choice-3-unselected"
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                Object {
                  "flex": 0,
                  "padding": 16,
                  "paddingLeft": undefined,
                  "paddingRight": undefined,
                  "paddingVertical": undefined,
                },
                false,
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#14171A",
                        "fontSize": 13,
                        "fontWeight": "700",
                      }
                    }
                  >
                    Apple Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "margin": 4,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="choice-4-unselected"
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                Object {
                  "flex": 0,
                  "padding": 16,
                  "paddingLeft": undefined,
                  "paddingRight": undefined,
                  "paddingVertical": undefined,
                },
                false,
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#14171A",
                        "fontSize": 13,
                        "fontWeight": "700",
                      }
                    }
                  >
                    Pineapple Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoices QCM Graphic 1`] = `
<View
  testID="question-choices"
>
  <View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="question-choice-1"
        >
          <View
            style={
              Array [
                Object {
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "borderRightWidth": 1,
                  "height": "100%",
                  "width": "25%",
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  undefined,
                ]
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                false,
                false,
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#14171A",
                        "fontSize": 15,
                        "fontWeight": "700",
                      }
                    }
                  >
                    Play Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="question-choice-2-selected"
        >
          <View
            style={
              Array [
                Object {
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "borderRightWidth": 1,
                  "height": "100%",
                  "width": "25%",
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  undefined,
                ]
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                false,
                Object {
                  "backgroundColor": "#00B0FF",
                  "borderColor": "#00B0FF",
                },
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 15,
                        "fontWeight": "700",
                      }
                    }
                  >
                    App Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "height": 8,
          "width": 8,
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderColor": "rgba(0, 0, 0, 0.1)",
                "borderRadius": 3,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "overflow": "hidden",
              },
            ]
          }
          testID="question-choice-3"
        >
          <View
            style={
              Array [
                Object {
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "borderRightWidth": 1,
                  "height": "100%",
                  "width": "25%",
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  undefined,
                ]
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingLeft": 16,
                  "paddingRight": 8,
                  "paddingVertical": 24,
                },
                false,
                false,
              ]
            }
          >
            <View>
              <View
                style={Object {}}
              >
                <Text
                  selectable={false}
                  style={
                    Array [
                      Object {},
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#14171A",
                        "fontSize": 15,
                        "fontWeight": "700",
                      }
                    }
                  >
                    Apple Store
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoices Slider (empty) 1`] = `null`;

exports[`Storyshots QuestionChoices Slider 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "paddingHorizontal": 20,
      },
      undefined,
    ]
  }
  testID="question-slider"
>
  <Text
    style={
      Array [
        Object {
          "fontSize": 25,
          "fontWeight": "700",
          "textAlign": "center",
        },
        Object {
          "color": "#00B0FF",
        },
      ]
    }
    testID="slider-value"
  >
    8
  </Text>
  <View
    onLayout={[Function]}
    onSlidingComplete={[Function]}
    step={2}
    style={
      Array [
        Object {
          "height": 40,
          "justifyContent": "center",
        },
        undefined,
      ]
    }
    value={8}
  >
    <View
      onLayout={[Function]}
      renderToHardwareTextureAndroid={true}
      style={
        Array [
          Object {
            "backgroundColor": "#b3b3b3",
          },
          Object {
            "borderRadius": 2,
            "height": 4,
          },
          Object {
            "borderRadius": 32,
            "height": 10,
          },
        ]
      }
      testID="slider-track"
    />
    <View
      renderToHardwareTextureAndroid={true}
      style={
        Object {
          "backgroundColor": "#00B0FF",
          "borderRadius": 32,
          "height": 10,
          "opacity": 0,
          "position": "absolute",
          "width": 0,
        }
      }
    />
    <View
      onLayout={[Function]}
      renderToHardwareTextureAndroid={true}
      style={
        Object {
          "backgroundColor": "white",
          "borderColor": "#00B0FF",
          "borderRadius": 15,
          "borderWidth": 1,
          "elevation": 4,
          "height": 30,
          "opacity": 0,
          "position": "absolute",
          "shadowColor": "#14171A",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0.15,
          "shadowRadius": 8,
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
          "width": 30,
        }
      }
      testID="slider-thumb"
    />
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      renderToHardwareTextureAndroid={true}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {},
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-around",
      }
    }
    testID="slider-values-container"
  >
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#14171A",
            "fontSize": 15,
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
        testID="slider-min-value"
      >
        Min label
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#14171A",
            "fontSize": 15,
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
        testID="slider-max-value"
      >
        Max label
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoices Template (empty) 1`] = `
<View
  testID="question-choices"
/>
`;

exports[`Storyshots QuestionChoices Template 1`] = `
<View
  testID="question-choices"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
      }
    }
    testID="question-template"
  >
    <View
      testID="question-part-1"
    >
      <View
        style={Object {}}
      >
        <Text
          selectable={false}
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#14171A",
                "fontSize": 15,
                "fontWeight": "700",
                "lineHeight": 30,
                "padding": 8,
              }
            }
          >
            My app 
          </Text>
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "paddingVertical": 8,
          },
          false,
        ]
      }
      testID="question-part-2"
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Type here"
        placeholderTextColor="#90A4AE"
        selectTextOnFocus={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#CFD8DC",
              "borderRadius": 3,
              "borderWidth": 1,
              "color": "#90A4AE",
              "fontSize": 15,
              "fontWeight": "700",
              "minWidth": 175,
              "padding": 8,
              "textAlign": "center",
            },
            "",
          ]
        }
        testID="question-part-2-text"
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      testID="question-part-3"
    >
      <View
        style={Object {}}
      >
        <Text
          selectable={false}
          style={
            Array [
              Object {
                "textDecorationLine": "line-through",
              },
              Object {},
              Object {},
            ]
          }
        >
          <Text
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                  "textDecorationLine": "line-through",
                }
              }
            >
               NOT on
            </Text>
          </Text>
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "paddingVertical": 8,
          },
          false,
        ]
      }
      testID="question-part-4"
    >
      <View
        testID="question-part-4-select"
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              style={
                Array [
                  Object {
                    "color": "#90A4AE",
                    "paddingRight": 39,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderColor": "#CFD8DC",
                      "borderRadius": 3,
                      "borderWidth": 1,
                      "color": "#90A4AE",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "minWidth": 175,
                      "padding": 8,
                      "textAlign": "center",
                    },
                    "",
                  ],
                  "",
                ]
              }
              underlineColorAndroid="transparent"
              value="Select an answer"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "marginTop": -7.5,
                    "right": 16,
                    "top": "50%",
                  },
                ]
              }
              testID="icon_container"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="15"
                bbWidth="15"
                color=""
                id="prefix__Calque_1"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    false,
                    Object {
                      "flex": 0,
                      "height": 15,
                      "width": 15,
                    },
                  ]
                }
                vbHeight={20}
                vbWidth={20}
                x={0}
                xmlSpace="preserve"
                y={0}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="prefix__Page-1"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="prefix__arrow_down"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                  },
                  undefined,
                ]
              }
              testID="done_bar"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "height": 215,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "Select an answer",
                        "textColor": undefined,
                        "value": "",
                      },
                      Object {
                        "label": "Play Store",
                        "textColor": undefined,
                        "value": "Play Store",
                      },
                      Object {
                        "label": "App Store",
                        "textColor": undefined,
                        "value": "App Store",
                      },
                      Object {
                        "label": "Apple Store",
                        "textColor": undefined,
                        "value": "Apple Store",
                      },
                      Object {
                        "label": "Pineapple Store",
                        "textColor": undefined,
                        "value": "Pineapple Store",
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      testID="question-part-5"
    >
      <View
        style={Object {}}
      >
        <Text
          selectable={false}
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "#14171A",
                "fontSize": 15,
                "fontWeight": "700",
                "lineHeight": 30,
                "padding": 8,
              }
            }
          >
            , but 
          </Text>
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "paddingVertical": 8,
          },
          false,
        ]
      }
      testID="question-part-6"
    >
      <TextInput
        allowFontScaling={true}
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Type here"
        placeholderTextColor="#90A4AE"
        selectTextOnFocus={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#CFD8DC",
              "borderRadius": 3,
              "borderWidth": 1,
              "color": "#90A4AE",
              "fontSize": 15,
              "fontWeight": "700",
              "minWidth": 175,
              "padding": 8,
              "textAlign": "center",
            },
            Object {
              "borderColor": "#00B0FF",
              "color": "#00B0FF",
            },
          ]
        }
        testID="question-part-6-text-selected"
        underlineColorAndroid="transparent"
        value="Waze"
      />
    </View>
    <View
      testID="question-part-7"
    >
      <View
        style={Object {}}
      >
        <Text
          selectable={false}
          style={
            Array [
              Object {
                "fontStyle": "italic",
              },
              Object {},
              Object {},
            ]
          }
        >
          <Text
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontStyle": "italic",
                  "fontWeight": "700",
                  "lineHeight": 30,
                  "padding": 8,
                }
              }
            >
              is on
            </Text>
          </Text>
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "paddingVertical": 8,
          },
          false,
        ]
      }
      testID="question-part-8"
    >
      <View
        testID="question-part-8-select-selected"
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              style={
                Array [
                  Object {
                    "color": "#90A4AE",
                    "paddingRight": 39,
                  },
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderColor": "#CFD8DC",
                      "borderRadius": 3,
                      "borderWidth": 1,
                      "color": "#90A4AE",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "minWidth": 175,
                      "padding": 8,
                      "textAlign": "center",
                    },
                    Object {
                      "borderColor": "#00B0FF",
                      "color": "#00B0FF",
                    },
                  ],
                  Object {
                    "color": "#00B0FF",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="App Store"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "marginTop": -7.5,
                    "right": 16,
                    "top": "50%",
                  },
                ]
              }
              testID="icon_container"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="15"
                bbWidth="15"
                color="#00B0FF"
                id="prefix__Calque_1"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                    false,
                    Object {
                      "flex": 0,
                      "height": 15,
                      "width": 15,
                    },
                  ]
                }
                vbHeight={20}
                vbWidth={20}
                x={0}
                xmlSpace="preserve"
                y={0}
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="prefix__Page-1"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
                    fill={
                      Array [
                        0,
                        0,
                        0.6901960784313725,
                        1,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="prefix__arrow_down"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                  },
                  undefined,
                ]
              }
              testID="done_bar"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "height": 215,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "Select an answer",
                        "textColor": undefined,
                        "value": "",
                      },
                      Object {
                        "label": "Play Store",
                        "textColor": undefined,
                        "value": "Play Store",
                      },
                      Object {
                        "label": "App Store",
                        "textColor": undefined,
                        "value": "App Store",
                      },
                      Object {
                        "label": "Apple Store",
                        "textColor": undefined,
                        "value": "Apple Store",
                      },
                      Object {
                        "label": "Pineapple Store",
                        "textColor": undefined,
                        "value": "Pineapple Store",
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={2}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoices Unsupported question type 1`] = `null`;
