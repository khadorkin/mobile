// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots QuestionChoice Default 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-1"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          false,
          false,
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                }
              }
            >
              Option 1
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoice Disabled 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-5-selected"
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "rgba(0, 0, 0, 0.1)",
            "borderRightWidth": 1,
            "height": "100%",
            "width": "25%",
          },
        ]
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          Array [
            Object {
              "height": "100%",
              "width": "100%",
            },
            Object {
              "height": "100%",
              "width": 320,
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "uri": "https://api.coorpacademy.com/api-service/medias?url=https%3A%2F%2Fapi.coorpacademy.com%2Fapi-service%2Fmedias%3Furl%3Dhttps%3A%2F%2Fstatic.coorpacademy.com%2Fcontent%2FCoorpAcademy%2Fcontent-eyrolles%2Fcockpit-eyrolles%2Fdefault%2Fshutterstock_123603871-1-1545058448041.jpg%26h%3D500%26w%3D500%26q%3D90%26m%3Dcontain&m=contain&q=90&w=640",
            }
          }
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": undefined,
                "width": undefined,
              },
              undefined,
            ]
          }
          testID="question-choice-5-img"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          false,
          Object {
            "backgroundColor": "#00B0FF",
            "borderColor": "#00B0FF",
            "borderRadius": 3,
          },
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 15,
                  "fontWeight": "700",
                }
              }
            >
              Option 5
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoice Selected 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-2-selected"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          false,
          Object {
            "backgroundColor": "#00B0FF",
            "borderColor": "#00B0FF",
            "borderRadius": 3,
          },
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 15,
                  "fontWeight": "700",
                }
              }
            >
              Option 2
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoice Selected with image 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-4-selected"
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "rgba(0, 0, 0, 0.1)",
            "borderRightWidth": 1,
            "height": "100%",
            "width": "25%",
          },
        ]
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          Array [
            Object {
              "height": "100%",
              "width": "100%",
            },
            Object {
              "height": "100%",
              "width": 320,
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "uri": "https://api.coorpacademy.com/api-service/medias?url=https%3A%2F%2Fapi.coorpacademy.com%2Fapi-service%2Fmedias%3Furl%3Dhttps%3A%2F%2Fstatic.coorpacademy.com%2Fcontent%2FCoorpAcademy%2Fcontent-eyrolles%2Fcockpit-eyrolles%2Fdefault%2Fshutterstock_123603871-1-1545058448041.jpg%26h%3D500%26w%3D500%26q%3D90%26m%3Dcontain&m=contain&q=90&w=640",
            }
          }
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": undefined,
                "width": undefined,
              },
              undefined,
            ]
          }
          testID="question-choice-4-img"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          false,
          Object {
            "backgroundColor": "#00B0FF",
            "borderColor": "#00B0FF",
            "borderRadius": 3,
          },
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 15,
                  "fontWeight": "700",
                }
              }
            >
              Option 4
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoice Squeezed 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-3"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          Object {
            "flex": 0,
            "padding": 16,
            "paddingLeft": undefined,
            "paddingRight": undefined,
            "paddingVertical": undefined,
          },
          false,
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 13,
                  "fontWeight": "700",
                }
              }
            >
              A Squeezed Question Choices
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoice With image 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-3"
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "rgba(0, 0, 0, 0.1)",
            "borderRightWidth": 1,
            "height": "100%",
            "width": "25%",
          },
        ]
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          Array [
            Object {
              "height": "100%",
              "width": "100%",
            },
            Object {
              "height": "100%",
              "width": 320,
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "uri": "https://api.coorpacademy.com/api-service/medias?url=https%3A%2F%2Fapi.coorpacademy.com%2Fapi-service%2Fmedias%3Furl%3Dhttps%3A%2F%2Fstatic.coorpacademy.com%2Fcontent%2FCoorpAcademy%2Fcontent-eyrolles%2Fcockpit-eyrolles%2Fdefault%2Fshutterstock_123603871-1-1545058448041.jpg%26h%3D500%26w%3D500%26q%3D90%26m%3Dcontain&m=contain&q=90&w=640",
            }
          }
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": undefined,
                "width": undefined,
              },
              undefined,
            ]
          }
          testID="question-choice-3-img"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          false,
          false,
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            selectable={false}
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              allowFontScaling={true}
              style={
                Object {
                  "color": "#14171A",
                  "fontSize": 15,
                  "fontWeight": "700",
                }
              }
            >
              A very very very long long long long long long long long long long long long long long long long text
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots QuestionChoice with html content 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderRadius": 3,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        },
      ]
    }
    testID="question-choice-1"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "paddingLeft": 16,
            "paddingRight": 8,
            "paddingVertical": 24,
          },
          false,
          false,
        ]
      }
    >
      <View>
        <View
          style={Object {}}
        >
          <Text
            allowFontScaling={true}
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "fontStyle": "italic",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontStyle": "italic",
                      "fontWeight": "700",
                    }
                  }
                >
                   italic input 
                </Text>
              </Text>
            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "color": "#14171A",
                    "fontSize": 15,
                    "fontWeight": "700",
                  }
                }
              >
                 and 
              </Text>
            </Text>
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {
                    "textDecorationLine": "line-through",
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                selectable={false}
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  allowFontScaling={true}
                  style={
                    Object {
                      "color": "#14171A",
                      "fontSize": 15,
                      "fontWeight": "700",
                      "textDecorationLine": "line-through",
                    }
                  }
                >
                   stripped input 
                </Text>
              </Text>
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
