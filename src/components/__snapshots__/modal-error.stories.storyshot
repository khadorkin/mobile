// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ModalError No content found 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "borderRadius": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "height": 64,
          "justifyContent": "center",
          "paddingHorizontal": 32,
        },
        Object {
          "backgroundColor": "#FDE2E5",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingLeft": 24,
          },
          false,
          false,
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="close-modal"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4283723386}
          focusable={false}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4283723386}
          vbHeight={24}
          vbWidth={24}
          width={16}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M0 0h24v24H0z"
              fill={null}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
              fill={4283723386}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#FFFFFF",
        "borderRadius": 1000,
        "marginTop": -48,
        "padding": 5,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderRadius": 1000,
            "justifyContent": "center",
            "padding": 16,
          },
          Object {
            "backgroundColor": "#F73F52",
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={50}
        bbWidth={50}
        color={4294967295}
        focusable={false}
        height={50}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 50,
              "width": 50,
            },
          ]
        }
        tintColor={4294967295}
        vbHeight={24}
        vbWidth={24}
        width={50}
      >
        <RNSVGGroup>
          <RNSVGPath
            d="M0 0h24v24H0z"
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          />
          <RNSVGGroup
            fill={4294967295}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              d="M20.308 3.692c-.231-.23-.655-.506-1.363-.506-.718 0-1.659.309-2.733.859a8.992 8.992 0 011.464.97c.3-.122 1.343-.492 1.571-.262 1.22 1.213-4.434 7.555-5.654 8.777-1.62 1.62-6.279 5.784-8.539 5.784-.663 0-.294-1.031-.045-1.647a8.957 8.957 0 01-.967-1.462c-1.76 3.416-.426 4.608 1.012 4.608 1.161 0 2.898-.792 4.854-2.145A6.858 6.858 0 0012 19a7 7 0 007-7c0-.729-.121-1.427-.329-2.087 1.147-1.652 3.06-4.798 1.637-6.221z"
            />
            <RNSVGPath
              d="M12.532 12.47c1.81-1.811 3.383-3.739 4.425-5.411a7 7 0 10-9.913 9.884c1.691-1.044 3.651-2.637 5.488-4.473z"
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "paddingBottom": 32,
          "paddingHorizontal": 32,
        },
        Object {
          "paddingTop": 32,
        },
        Object {
          "paddingTop": 16,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {},
          Array [
            Object {
              "fontWeight": "700",
            },
            Object {
              "color": "#546E7A",
              "fontSize": 17,
              "textAlign": "center",
            },
          ],
        ]
      }
    >
      Your data seems to be lost
    </Text>
    <View
      style={
        Object {
          "height": 24,
          "width": 24,
        }
      }
    />
    <Text
      style={
        Array [
          Object {},
          Object {
            "color": "#546E7A",
            "fontSize": 17,
            "textAlign": "center",
          },
        ]
      }
    >
      in the network between Saturn and the Earth, please refresh in order to enjoy learning
    </Text>
    <View
      style={
        Object {
          "height": 24,
          "width": 24,
        }
      }
    />
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        testID="button-retry-action"
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#00B0FF",
              "borderRadius": 32,
              "borderWidth": 0,
              "flexDirection": "row",
              "height": 54,
              "justifyContent": "center",
              "marginBottom": 0,
              "opacity": 1,
              "paddingHorizontal": 24,
            }
          }
          testID="button-retry-action-native"
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            color={4294967295}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            tintColor={4294967295}
            vbHeight={24}
            vbWidth={24}
            width={25}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M0 0h24v24H0z"
                fill={null}
                propList={
                  Array [
                    "fill",
                  ]
                }
              />
              <RNSVGGroup
                fill={4294967295}
                propList={
                  Array [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M18.968 13a6.945 6.945 0 01-1.369 3.554l1.427 1.427a8.944 8.944 0 001.942-4.98h-2zM13 19.29v2.02a8.928 8.928 0 004.611-1.917l-1.426-1.424A6.964 6.964 0 0113 19.29zM20.888 11a8.986 8.986 0 00-2.138-4.584l-1.5 1.324A6.981 6.981 0 0118.86 11h2.028zM7.473 4.603C4.803 6.167 3 9.059 3 12.37c0 4.624 3.507 8.441 8 8.941v-2.02c-3.387-.488-6-3.401-6-6.92 0-2.745 1.592-5.12 3.898-6.266L12 9.37V2H5l2.473 2.603z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <View
            style={
              Object {
                "height": 8,
                "width": 8,
              }
            }
          />
          <Text
            style={
              Array [
                Object {},
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 17,
                  "fontWeight": "700",
                },
              ]
            }
          >
            Refresh
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 24,
          "width": 24,
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Array [
            Object {},
            Array [
              Object {
                "color": "#546E7A",
                "fontSize": 17,
                "textAlign": "center",
              },
              Object {
                "fontSize": 15,
              },
            ],
          ]
        }
      >
        Refresh not working?
      </Text>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="ask-for-help"
      >
        <Text
          style={
            Array [
              Object {},
              Array [
                Object {
                  "color": "#546E7A",
                  "fontSize": 17,
                  "textAlign": "center",
                },
                Object {
                  "fontSize": 15,
                },
                Object {
                  "fontWeight": "700",
                  "textDecorationLine": "underline",
                },
              ],
            ]
          }
        >
          Ask for help
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots ModalError Platform not activated 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "borderRadius": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "height": 64,
          "justifyContent": "center",
          "paddingHorizontal": 32,
        },
        Object {
          "backgroundColor": "#FDE2E5",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingLeft": 24,
          },
          false,
          false,
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="close-modal"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4283723386}
          focusable={false}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4283723386}
          vbHeight={24}
          vbWidth={24}
          width={16}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M0 0h24v24H0z"
              fill={null}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
              fill={4283723386}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#FFFFFF",
        "borderRadius": 1000,
        "marginTop": -48,
        "padding": 5,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderRadius": 1000,
            "justifyContent": "center",
            "padding": 16,
          },
          Object {
            "backgroundColor": "#F73F52",
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={50}
        bbWidth={50}
        color={4294967295}
        focusable={false}
        height={50}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "marginLeft": 5,
            },
            Object {
              "flex": 0,
              "height": 50,
              "width": 50,
            },
          ]
        }
        tintColor={4294967295}
        vbHeight={24}
        vbWidth={24}
        width={50}
      >
        <RNSVGGroup>
          <RNSVGPath
            d="M0 0h24v24H0z"
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          />
          <RNSVGGroup
            fill={4294967295}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              d="M19.707 9.706l-1.414-1.414L16 10.585l-2.293-2.293-1.414 1.414 2.293 2.293-2.293 2.293 1.414 1.414L16 13.413l2.293 2.293 1.414-1.414-2.293-2.293z"
            />
            <RNSVGPath
              d="M6 15.999v-8h10v-4c0-1.104-.897-2-2-2H6c-1.103 0-2 .896-2 2v16c0 1.104.897 2 2 2h8c1.103 0 2-.896 2-2v-4H6zm8-12v2H6v-2h8zm-8 16v-2h8v2H6z"
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "paddingBottom": 32,
          "paddingHorizontal": 32,
        },
        Object {
          "paddingTop": 32,
        },
        Object {
          "paddingTop": 16,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {},
          Array [
            Object {
              "fontWeight": "700",
            },
            Object {
              "color": "#546E7A",
              "fontSize": 17,
              "textAlign": "center",
            },
          ],
        ]
      }
    >
      The app has been disabled for your platform
    </Text>
    <View
      style={
        Object {
          "height": 24,
          "width": 24,
        }
      }
    />
    <Text
      style={
        Array [
          Object {},
          Object {
            "color": "#546E7A",
            "fontSize": 17,
            "textAlign": "center",
          },
        ]
      }
    >
      if you want to reactivate it, contact your manager or click on the link below and we will pass the message on
    </Text>
    <View
      style={
        Object {
          "height": 24,
          "width": 24,
        }
      }
    />
    <View
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View
        testID="button-retry-action"
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#00B0FF",
              "borderRadius": 32,
              "borderWidth": 0,
              "flexDirection": "row",
              "height": 54,
              "justifyContent": "center",
              "marginBottom": 0,
              "opacity": 1,
              "paddingHorizontal": 24,
            }
          }
          testID="button-retry-action-native"
        >
          <Text
            style={
              Array [
                Object {},
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 17,
                  "fontWeight": "700",
                },
              ]
            }
          >
            I want it !
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
