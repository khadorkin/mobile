// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Screen Default 1`] = `
Array [
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 0,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        undefined,
      ]
    }
  />,
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      innerRef={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardSpace={0}
      nestedScrollEnabled={true}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={true}
      testID="fake-screen"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <Text>
          Foo bar baz
        </Text>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`Storyshots Screen Not scrollable 1`] = `
Array [
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 0,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        undefined,
      ]
    }
  />,
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flexGrow": 1,
        }
      }
      testID="fake-screen"
    >
      <Text>
        Foo bar baz
      </Text>
    </View>
  </View>,
]
`;

exports[`Storyshots Screen Not scrollable without safeArea 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#FFFFFF",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flexGrow": 1,
      }
    }
    testID="fake-screen"
  >
    <Text>
      Foo bar baz
    </Text>
  </View>
</View>
`;

exports[`Storyshots Screen With custom style 1`] = `
Array [
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 0,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  />,
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      innerRef={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardSpace={0}
      nestedScrollEnabled={true}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={true}
      testID="fake-screen"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <Text>
          Foo bar baz
        </Text>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`Storyshots Screen With refresh control 1`] = `
Array [
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 0,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  />,
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#FFFFFF",
        },
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      innerRef={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardSpace={0}
      nestedScrollEnabled={true}
      onScroll={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      resetKeyboardSpace={[Function]}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={true}
      testID="fake-screen"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <RCTRefreshControl />
      <View>
        <Text>
          Foo bar baz
        </Text>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`Storyshots Screen Without safeArea 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#FFFFFF",
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Object {
        "flexGrow": 1,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    innerRef={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardSpace={0}
    nestedScrollEnabled={true}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={true}
    testID="fake-screen"
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Text>
        Foo bar baz
      </Text>
    </View>
  </RCTScrollView>
</View>
`;
