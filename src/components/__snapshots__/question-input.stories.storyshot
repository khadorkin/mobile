// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots QuestionInput Input (full width) 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      Object {
        "width": "100%",
      },
    ]
  }
  testID="question-input"
>
  <TextInput
    allowFontScaling={true}
    editable={true}
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Type here"
    placeholderTextColor="#90A4AE"
    rejectResponderTermination={true}
    selectTextOnFocus={true}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CFD8DC",
          "borderRadius": 3,
          "borderWidth": 1,
          "minWidth": 175,
          "padding": 8,
        },
        Object {
          "color": "#90A4AE",
          "fontSize": 15,
          "fontWeight": "700",
          "textAlign": "center",
        },
        undefined,
      ]
    }
    testID="question-input-text"
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Storyshots QuestionInput Not supported 1`] = `null`;

exports[`Storyshots QuestionInput Select (disabled) 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      false,
    ]
  }
  testID="question-input"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="question-input-select-disabled-input"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#CFD8DC",
              "borderRadius": 3,
              "borderWidth": 1,
              "minWidth": 175,
              "padding": 8,
            },
            undefined,
          ],
        ]
      }
    >
      <Text
        style={
          Array [
            Object {},
            Array [
              Object {
                "color": "#90A4AE",
                "flex": 1,
                "textAlign": "center",
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              undefined,
            ],
          ]
        }
      >
        Select an answer
      </Text>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={15}
        bbWidth={15}
        color={4283723386}
        focusable={false}
        height={15}
        id="prefix__Calque_1"
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 15,
              "width": 15,
            },
          ]
        }
        tintColor={4283723386}
        vbHeight={20}
        vbWidth={20}
        width={15}
        x={0}
        xmlSpace="preserve"
        y={0}
      >
        <RNSVGGroup>
          <RNSVGGroup
            name="prefix__Page-1"
          >
            <RNSVGPath
              d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
              fill={4283723386}
              name="prefix__arrow_down"
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    testID="question-input-select-disabled-modal-animated"
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onSwipeComplete={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      testID="question-input-select-disabled-modal-animated"
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 5,
            "overflow": "hidden",
          }
        }
        testID="question-input-select-disabled-modal"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#FFFFFF",
                "height": 64,
                "justifyContent": "center",
                "paddingHorizontal": 32,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingLeft": 24,
                },
                false,
                false,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              hitSlop={
                Object {
                  "bottom": 16,
                  "left": 16,
                  "right": 16,
                  "top": 16,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="close-modal"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4283723386}
                focusable={false}
                height={16}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4283723386}
                vbHeight={24}
                vbWidth={24}
                width={16}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M0 0h24v24H0z"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                    fill={4283723386}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "paddingBottom": 32,
                "paddingHorizontal": 32,
              },
              undefined,
              undefined,
              Object {
                "paddingHorizontal": 0,
              },
            ]
          }
        >
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={
              Array [
                Object {
                  "_id": "1",
                  "text": "Play Store",
                  "value": "play_store",
                },
                Object {
                  "_id": "2",
                  "text": "App Store",
                  "value": "app_store",
                },
                Object {
                  "_id": "3",
                  "text": "Apple Store",
                  "value": "apple_store",
                },
                Object {
                  "_id": "4",
                  "text": "Pineapple Store",
                  "value": "pineapple_store",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "width": "100%",
              }
            }
            testID="question-input-select-disabled-modal-items"
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-disabled-modal-item-1"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Play Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-disabled-modal-item-2"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    App Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-disabled-modal-item-3"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Apple Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-disabled-modal-item-4"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Pineapple Store
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots QuestionInput Select (full width) 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      Object {
        "width": "100%",
      },
    ]
  }
  testID="question-input"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="question-input-select-input"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#CFD8DC",
              "borderRadius": 3,
              "borderWidth": 1,
              "minWidth": 175,
              "padding": 8,
            },
            undefined,
          ],
        ]
      }
    >
      <Text
        style={
          Array [
            Object {},
            Array [
              Object {
                "color": "#90A4AE",
                "flex": 1,
                "textAlign": "center",
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              undefined,
            ],
          ]
        }
      >
        Select an answer
      </Text>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={15}
        bbWidth={15}
        color={4283723386}
        focusable={false}
        height={15}
        id="prefix__Calque_1"
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 15,
              "width": 15,
            },
          ]
        }
        tintColor={4283723386}
        vbHeight={20}
        vbWidth={20}
        width={15}
        x={0}
        xmlSpace="preserve"
        y={0}
      >
        <RNSVGGroup>
          <RNSVGGroup
            name="prefix__Page-1"
          >
            <RNSVGPath
              d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
              fill={4283723386}
              name="prefix__arrow_down"
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    testID="question-input-select-modal-animated"
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onSwipeComplete={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      testID="question-input-select-modal-animated"
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 5,
            "overflow": "hidden",
          }
        }
        testID="question-input-select-modal"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#FFFFFF",
                "height": 64,
                "justifyContent": "center",
                "paddingHorizontal": 32,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingLeft": 24,
                },
                false,
                false,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              hitSlop={
                Object {
                  "bottom": 16,
                  "left": 16,
                  "right": 16,
                  "top": 16,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="close-modal"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4283723386}
                focusable={false}
                height={16}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4283723386}
                vbHeight={24}
                vbWidth={24}
                width={16}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M0 0h24v24H0z"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                    fill={4283723386}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "paddingBottom": 32,
                "paddingHorizontal": 32,
              },
              undefined,
              undefined,
              Object {
                "paddingHorizontal": 0,
              },
            ]
          }
        >
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={
              Array [
                Object {
                  "_id": "1",
                  "text": "Play Store",
                  "value": "play_store",
                },
                Object {
                  "_id": "2",
                  "text": "App Store",
                  "value": "app_store",
                },
                Object {
                  "_id": "3",
                  "text": "Apple Store",
                  "value": "apple_store",
                },
                Object {
                  "_id": "4",
                  "text": "Pineapple Store",
                  "value": "pineapple_store",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "width": "100%",
              }
            }
            testID="question-input-select-modal-items"
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-1"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Play Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-2"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    App Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-3"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Apple Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-4"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Pineapple Store
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots QuestionInput Select (not empty) 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      false,
    ]
  }
  testID="question-input"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="question-input-select-selected-input"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#CFD8DC",
              "borderRadius": 3,
              "borderWidth": 1,
              "minWidth": 175,
              "padding": 8,
            },
            Object {
              "borderColor": "#00B0FF",
              "color": "#00B0FF",
            },
          ],
        ]
      }
    >
      <Text
        style={
          Array [
            Object {},
            Array [
              Object {
                "color": "#90A4AE",
                "flex": 1,
                "textAlign": "center",
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              Object {
                "color": "#00B0FF",
              },
            ],
          ]
        }
      >
        App Store
      </Text>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={15}
        bbWidth={15}
        color={4278235391}
        focusable={false}
        height={15}
        id="prefix__Calque_1"
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 15,
              "width": 15,
            },
          ]
        }
        tintColor={4278235391}
        vbHeight={20}
        vbWidth={20}
        width={15}
        x={0}
        xmlSpace="preserve"
        y={0}
      >
        <RNSVGGroup>
          <RNSVGGroup
            name="prefix__Page-1"
          >
            <RNSVGPath
              d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
              fill={4278235391}
              name="prefix__arrow_down"
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    testID="question-input-select-selected-modal-animated"
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onSwipeComplete={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      testID="question-input-select-selected-modal-animated"
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 5,
            "overflow": "hidden",
          }
        }
        testID="question-input-select-selected-modal"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#FFFFFF",
                "height": 64,
                "justifyContent": "center",
                "paddingHorizontal": 32,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingLeft": 24,
                },
                false,
                false,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              hitSlop={
                Object {
                  "bottom": 16,
                  "left": 16,
                  "right": 16,
                  "top": 16,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="close-modal"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4283723386}
                focusable={false}
                height={16}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4283723386}
                vbHeight={24}
                vbWidth={24}
                width={16}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M0 0h24v24H0z"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                    fill={4283723386}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "paddingBottom": 32,
                "paddingHorizontal": 32,
              },
              undefined,
              undefined,
              Object {
                "paddingHorizontal": 0,
              },
            ]
          }
        >
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={
              Array [
                Object {
                  "_id": "1",
                  "text": "Play Store",
                  "value": "play_store",
                },
                Object {
                  "_id": "2",
                  "text": "App Store",
                  "value": "app_store",
                },
                Object {
                  "_id": "3",
                  "text": "Apple Store",
                  "value": "apple_store",
                },
                Object {
                  "_id": "4",
                  "text": "Pineapple Store",
                  "value": "pineapple_store",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "width": "100%",
              }
            }
            testID="question-input-select-selected-modal-items"
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-selected-modal-item-1"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Play Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-selected-modal-item-2"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          Object {
                            "color": "#00B0FF",
                          },
                        ],
                      ]
                    }
                  >
                    App Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-selected-modal-item-3"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Apple Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-selected-modal-item-4"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Pineapple Store
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots QuestionInput Select 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      false,
    ]
  }
  testID="question-input"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="question-input-select-input"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#CFD8DC",
              "borderRadius": 3,
              "borderWidth": 1,
              "minWidth": 175,
              "padding": 8,
            },
            undefined,
          ],
        ]
      }
    >
      <Text
        style={
          Array [
            Object {},
            Array [
              Object {
                "color": "#90A4AE",
                "flex": 1,
                "textAlign": "center",
              },
              Object {
                "color": "#90A4AE",
                "fontSize": 15,
                "fontWeight": "700",
                "textAlign": "center",
              },
              undefined,
            ],
          ]
        }
      >
        Select an answer
      </Text>
      <View
        style={
          Object {
            "height": 8,
            "width": 8,
          }
        }
      />
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={15}
        bbWidth={15}
        color={4283723386}
        focusable={false}
        height={15}
        id="prefix__Calque_1"
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 15,
              "width": 15,
            },
          ]
        }
        tintColor={4283723386}
        vbHeight={20}
        vbWidth={20}
        width={15}
        x={0}
        xmlSpace="preserve"
        y={0}
      >
        <RNSVGGroup>
          <RNSVGGroup
            name="prefix__Page-1"
          >
            <RNSVGPath
              d="M0 6.5l3-2.9 7 6.9 7-6.9 3 2.9-10 9.9z"
              fill={4283723386}
              name="prefix__arrow_down"
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    testID="question-input-select-modal-animated"
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onSwipeComplete={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      testID="question-input-select-modal-animated"
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 5,
            "overflow": "hidden",
          }
        }
        testID="question-input-select-modal"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#FFFFFF",
                "height": 64,
                "justifyContent": "center",
                "paddingHorizontal": 32,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingLeft": 24,
                },
                false,
                false,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              hitSlop={
                Object {
                  "bottom": 16,
                  "left": 16,
                  "right": 16,
                  "top": 16,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="close-modal"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4283723386}
                focusable={false}
                height={16}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4283723386}
                vbHeight={24}
                vbWidth={24}
                width={16}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M0 0h24v24H0z"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
                    fill={4283723386}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "paddingBottom": 32,
                "paddingHorizontal": 32,
              },
              undefined,
              undefined,
              Object {
                "paddingHorizontal": 0,
              },
            ]
          }
        >
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={
              Array [
                Object {
                  "_id": "1",
                  "text": "Play Store",
                  "value": "play_store",
                },
                Object {
                  "_id": "2",
                  "text": "App Store",
                  "value": "app_store",
                },
                Object {
                  "_id": "3",
                  "text": "Apple Store",
                  "value": "apple_store",
                },
                Object {
                  "_id": "4",
                  "text": "Pineapple Store",
                  "value": "pineapple_store",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "width": "100%",
              }
            }
            testID="question-input-select-modal-items"
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-1"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Play Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-2"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    App Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-3"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Apple Store
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "borderColor": "rgba(0, 0, 0, 0.1)",
                      "borderTopWidth": 1,
                    }
                  }
                />
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 1,
                      "padding": 16,
                    }
                  }
                  testID="question-input-select-modal-item-4"
                >
                  <Text
                    style={
                      Array [
                        Object {},
                        Array [
                          Object {
                            "color": "#14171A",
                            "fontWeight": "700",
                          },
                          false,
                        ],
                      ]
                    }
                  >
                    Pineapple Store
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots QuestionInput Text (disabled) 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      false,
    ]
  }
  testID="question-input"
>
  <TextInput
    allowFontScaling={true}
    editable={false}
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Type here"
    placeholderTextColor="#90A4AE"
    rejectResponderTermination={true}
    selectTextOnFocus={false}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CFD8DC",
          "borderRadius": 3,
          "borderWidth": 1,
          "minWidth": 175,
          "padding": 8,
        },
        Object {
          "color": "#90A4AE",
          "fontSize": 15,
          "fontWeight": "700",
          "textAlign": "center",
        },
        undefined,
      ]
    }
    testID="question-input-text-disabled"
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Storyshots QuestionInput Text (not empty) 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      false,
    ]
  }
  testID="question-input"
>
  <TextInput
    allowFontScaling={true}
    editable={true}
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Type here"
    placeholderTextColor="#90A4AE"
    rejectResponderTermination={true}
    selectTextOnFocus={true}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CFD8DC",
          "borderRadius": 3,
          "borderWidth": 1,
          "minWidth": 175,
          "padding": 8,
        },
        Object {
          "color": "#90A4AE",
          "fontSize": 15,
          "fontWeight": "700",
          "textAlign": "center",
        },
        Object {
          "borderColor": "#00B0FF",
          "color": "#00B0FF",
        },
      ]
    }
    testID="question-input-text-selected"
    underlineColorAndroid="transparent"
    value="Foo bar baz"
  />
</View>
`;

exports[`Storyshots QuestionInput Text 1`] = `
<View
  style={
    Array [
      Object {
        "paddingVertical": 8,
      },
      false,
    ]
  }
  testID="question-input"
>
  <TextInput
    allowFontScaling={true}
    editable={true}
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder="Type here"
    placeholderTextColor="#90A4AE"
    rejectResponderTermination={true}
    selectTextOnFocus={true}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CFD8DC",
          "borderRadius": 3,
          "borderWidth": 1,
          "minWidth": 175,
          "padding": 8,
        },
        Object {
          "color": "#90A4AE",
          "fontSize": 15,
          "fontWeight": "700",
          "textAlign": "center",
        },
        undefined,
      ]
    }
    testID="question-input-text"
    underlineColorAndroid="transparent"
  />
</View>
`;
